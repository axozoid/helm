apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "generic.fullname" . }}
  labels:
    {{- include "generic.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "generic.labels" . | nindent 6 }}
      {{- if .Values.extraPodLabels }}
      {{- include "generic.extraPodLabels" . | nindent 6 }}
      {{- end }}
  template:
    metadata:
      annotations:
        checksum-secrets: {{ include (print $.Template.BasePath "/external-secret.yaml") . | sha256sum }}
        checksum-configs: {{ include (print $.Template.BasePath "/hpa.yaml") . | sha256sum }}
        {{- if and .Values.metrics.enabled (eq .Values.metrics.source "pod") }}
        {{- include "generic.metrics" . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "generic.labels" . | nindent 8 }}
        {{- if .Values.extraPodLabels }}
        {{- include "generic.extraPodLabels" . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "generic.serviceAccountName" . }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "generic.fullname" . }}
          {{- if .Values.command }}
          command: {{ .Values.command }}
          {{- end }}
          {{- if .Values.args }}
          args: {{ .Values.args }}
          {{- end }}
          {{- if or .Values.envs .Values.externalSecrets.enabled .Values.envsFromExistingSecret .Values.envsFromExistingConfigMap }}
          envFrom:
            {{- if .Values.envs }}
            - configMapRef:
                name: {{ include "generic.fullname" . }}
            {{- end }}
            {{- if .Values.envsFromExistingConfigMap }}
            - configMapRef:
                name: {{ .Values.envsFromExistingConfigMap }}
            {{- end }}
            {{- if .Values.envsFromExistingSecret }}
            - secretRef:
                name: {{ .Values.envsFromExistingSecret }}
            {{- end }}
            {{- if .Values.externalSecrets.enabled }}
            - secretRef:
                name: {{ include "generic.fullname" . }}
            {{- end }}
            {{- end }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          {{- range $k, $v := .Values.appPorts }}
            - name: {{ $k }}
              containerPort: {{ $v }}
              protocol: TCP
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end}}
          {{- if .Values.extraVolumeMounts }}
          volumeMounts:
          {{- toYaml .Values.extraVolumeMounts | nindent 12 -}}
          {{ end }}
      {{- if .Values.extraVolumes }}
      volumes:
      {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
